/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 heart.glb 
*/

import React from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/all";
gsap.registerPlugin(ScrollTrigger);
gsap.registerPlugin(useGSAP);
export function HeartModel(props) {
  const { nodes, materials } = useGLTF("/Models/heart.glb");
  const [active, setActive] = React.useState(false);

  const ref = React.useRef();
  useGSAP(() => {
    gsap.fromTo(
      ref.current.scale,
      {
        x: 0,
        y: 0,
        z: 0,
      },
      {
        x: 0.4,
        y: 0.4,
        z: 0.4,
        duration: 0.0001,
        scrollTrigger: {
          trigger: ".food-is-love",
          start: "top bottom",
          end: "top top",
          toggleActions: "play none none reverse",
          onToggle: (self) => {
            setActive(self.isActive);
          },
          // markers: true,
        },
      }
    );
    gsap.fromTo(
      ref.current.scale,
      {
        x: 0.4,
        y: 0.4,
        z: 0.4,
      },
      {
        x: 0,
        y: 0,
        z: 0,
        duration: 0.0001,
        scrollTrigger: {
          trigger: ".food-is-love",
          start: "top top",
          end: "top -100%",
          toggleActions: "play none none reverse",
          // markers: true,
        },
        immediateRender: false,
      }
    );
  });
  useFrame(() => {
    if (active) {
      ref.current.rotation.y += 0.01;
    } else {
      return;
    }
  });
  return (
    <group {...props} dispose={null} scale={0} ref={ref}>
      <mesh
        geometry={nodes.polySurface1.geometry}
        material={materials.standardSurface2}
        position={[0, 0.016, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/heart.glb");
