/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 art.glb 
*/

import React from "react";
import { useGLTF } from "@react-three/drei";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";
import { useFrame } from "@react-three/fiber";
import { ScrollTrigger } from "gsap/all";
gsap.registerPlugin(ScrollTrigger);
gsap.registerPlugin(useGSAP);
export function ArtModel(props) {
  const { nodes, materials } = useGLTF("/Models/art.glb");
  const ref = React.useRef();
  const [active, setActive] = React.useState(false);
  useGSAP(() => {
    gsap.fromTo(
      ref.current.scale,
      {
        x: 0,
        y: 0,
        z: 0,
      },
      {
        x: 0.6,
        y: 0.6,
        z: 0.6,
        duration: 0.0001,
        scrollTrigger: {
          trigger: ".food-is-art",
          start: "top bottom",
          end: "top top",
          toggleActions: "play none none reverse",
          onToggle: (self) => {
            setActive(self.isActive);
          },
          // markers: true,
        },
      }
    );
    gsap.fromTo(
      ref.current.scale,
      {
        x: 0.6,
        y: 0.6,
        z: 0.6,
      },
      {
        x: 0,
        y: 0,
        z: 0,
        duration: 0.0001,
        scrollTrigger: {
          trigger: ".food-is-art",
          start: "top top",
          end: "top -100%",
          toggleActions: "play none none reverse",
          // markers: true,
        },
        immediateRender: false,
      }
    );
  });
  useFrame(() => {
    if (active) {
      ref.current.rotation.y += 0.01;
    } else {
      return;
    }
  });
  return (
    <group {...props} dispose={null} scale={[0, 0, 0]} ref={ref}>
      <mesh
        geometry={nodes.cutensils_asian_turner_Cylinder024.geometry}
        material={materials["_crayfishdiffuse.001"]}
        position={[-0.713, -2.822, -0.27]}
        rotation={[1.496, -0.324, -0.096]}
      />
      <mesh
        geometry={nodes.lowpoly_spoon.geometry}
        material={materials["Material.002"]}
        position={[-0.249, 0.191, -0.465]}
        rotation={[1.794, -1.268, -2.933]}
        scale={[2.946, 0.052, 0.743]}
      />
      <mesh
        geometry={nodes.cutensils_asian_turner_Cylinder001.geometry}
        material={materials["Material.002"]}
        position={[-1.085, -3.946, -0.102]}
        rotation={[1.496, -0.324, -0.096]}
      />
      <mesh
        geometry={nodes.cutensils_asian_turner_Cylinder002.geometry}
        material={materials["Material.002"]}
        position={[1.18, 2.863, -0.974]}
        rotation={[1.496, -0.324, -0.096]}
      />
    </group>
  );
}

useGLTF.preload("/art.glb");
